//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Life_Eternity_Pharmacy.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Pharmacy_Life_EternityEntities : DbContext
    {
        public Pharmacy_Life_EternityEntities()
            : base("name=Pharmacy_Life_EternityEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int SPCategoriaAgregar(string nombre, string descripcion, char condicion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var condicionParameter = condicion != null ?
                new ObjectParameter("condicion", condicion) :
                new ObjectParameter("condicion", typeof(char));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCategoriaAgregar", nombreParameter, descripcionParameter, condicionParameter);
        }
    
        public virtual ObjectResult<SPCategoriaConsultarPorID_Result> SPCategoriaConsultarPorID(Nullable<int> idCategoria)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("idCategoria", idCategoria) :
                new ObjectParameter("idCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCategoriaConsultarPorID_Result>("SPCategoriaConsultarPorID", idCategoriaParameter);
        }
    
        public virtual int SPCategoriaEliminar(Nullable<int> idCategoria)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("idCategoria", idCategoria) :
                new ObjectParameter("idCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCategoriaEliminar", idCategoriaParameter);
        }
    
        public virtual int SPCategoriaModificar(Nullable<int> idCategoria, string nombre, string descripcion, char condicion)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("idCategoria", idCategoria) :
                new ObjectParameter("idCategoria", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var condicionParameter = condicion != null ?
                new ObjectParameter("condicion", condicion) :
                new ObjectParameter("condicion", typeof(char));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCategoriaModificar", idCategoriaParameter, nombreParameter, descripcionParameter, condicionParameter);
        }
    
        public virtual int SPProductoAgregar(string nombre, string descripcion, Nullable<double> precio, Nullable<int> stock, Nullable<int> idProveedor, Nullable<int> idCategoria)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(double));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(int));
    
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("idProveedor", idProveedor) :
                new ObjectParameter("idProveedor", typeof(int));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("idCategoria", idCategoria) :
                new ObjectParameter("idCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPProductoAgregar", nombreParameter, descripcionParameter, precioParameter, stockParameter, idProveedorParameter, idCategoriaParameter);
        }
    
        public virtual ObjectResult<SPProductoConsultarPorID_Result> SPProductoConsultarPorID(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPProductoConsultarPorID_Result>("SPProductoConsultarPorID", idProductoParameter);
        }
    
        public virtual int SPProductoEliminar(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPProductoEliminar", idProductoParameter);
        }
    
        public virtual int SPProductoModificar(Nullable<int> idProducto, string nombre, string descripcion, Nullable<double> precio, Nullable<int> stock, Nullable<int> idProveedor, Nullable<int> idCategoria)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(double));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(int));
    
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("idProveedor", idProveedor) :
                new ObjectParameter("idProveedor", typeof(int));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("idCategoria", idCategoria) :
                new ObjectParameter("idCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPProductoModificar", idProductoParameter, nombreParameter, descripcionParameter, precioParameter, stockParameter, idProveedorParameter, idCategoriaParameter);
        }
    
        public virtual int SPProveedorAgregar(string nombre, string direccion, string telefono, string correo)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPProveedorAgregar", nombreParameter, direccionParameter, telefonoParameter, correoParameter);
        }
    
        public virtual ObjectResult<SPProveedorConsultarPorID_Result> SPProveedorConsultarPorID(Nullable<int> idProveedor)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("idProveedor", idProveedor) :
                new ObjectParameter("idProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPProveedorConsultarPorID_Result>("SPProveedorConsultarPorID", idProveedorParameter);
        }
    
        public virtual int SPProveedorEliminar(Nullable<int> idProveedor)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("idProveedor", idProveedor) :
                new ObjectParameter("idProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPProveedorEliminar", idProveedorParameter);
        }
    
        public virtual ObjectResult<SPProveedorListar_Result> SPProveedorListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPProveedorListar_Result>("SPProveedorListar");
        }
    
        public virtual int SPProveedorModificar(Nullable<int> idProveedor, string nombre, string direccion, string telefono, string correo)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("idProveedor", idProveedor) :
                new ObjectParameter("idProveedor", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPProveedorModificar", idProveedorParameter, nombreParameter, direccionParameter, telefonoParameter, correoParameter);
        }
    
        public virtual ObjectResult<SPCategoriaListar_Result> SPCategoriaListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCategoriaListar_Result>("SPCategoriaListar");
        }
    
        public virtual ObjectResult<SPProductoListar_Result> SPProductoListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPProductoListar_Result>("SPProductoListar");
        }
    
        public virtual int SPClienteAgregar(string nombre, string apellido, string direccion, string telefono, string correo)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPClienteAgregar", nombreParameter, apellidoParameter, direccionParameter, telefonoParameter, correoParameter);
        }
    
        public virtual ObjectResult<SPClienteConsultarPorID_Result> SPClienteConsultarPorID(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPClienteConsultarPorID_Result>("SPClienteConsultarPorID", idClienteParameter);
        }
    
        public virtual int SPClienteEliminar(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPClienteEliminar", idClienteParameter);
        }
    
        public virtual ObjectResult<SPClienteListar_Result> SPClienteListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPClienteListar_Result>("SPClienteListar");
        }
    
        public virtual int SPClienteModificar(Nullable<int> idCliente, string nombre, string apellido, string direccion, string telefono, string correo)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPClienteModificar", idClienteParameter, nombreParameter, apellidoParameter, direccionParameter, telefonoParameter, correoParameter);
        }
    
        public virtual int SPPersonalAgregar(string nombre, string apellido, string direccion, string telefono, string correo, string rol)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var rolParameter = rol != null ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPPersonalAgregar", nombreParameter, apellidoParameter, direccionParameter, telefonoParameter, correoParameter, rolParameter);
        }
    
        public virtual ObjectResult<SPPersonalConsultarPorID_Result> SPPersonalConsultarPorID(Nullable<int> idPersonal)
        {
            var idPersonalParameter = idPersonal.HasValue ?
                new ObjectParameter("idPersonal", idPersonal) :
                new ObjectParameter("idPersonal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPPersonalConsultarPorID_Result>("SPPersonalConsultarPorID", idPersonalParameter);
        }
    
        public virtual int SPPersonalEliminar(Nullable<int> idPersonal)
        {
            var idPersonalParameter = idPersonal.HasValue ?
                new ObjectParameter("idPersonal", idPersonal) :
                new ObjectParameter("idPersonal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPPersonalEliminar", idPersonalParameter);
        }
    
        public virtual ObjectResult<SPPersonalListar_Result> SPPersonalListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPPersonalListar_Result>("SPPersonalListar");
        }
    
        public virtual int SPPersonalModificar(Nullable<int> idPersonal, string nombre, string apellido, string direccion, string telefono, string correo, string rol)
        {
            var idPersonalParameter = idPersonal.HasValue ?
                new ObjectParameter("idPersonal", idPersonal) :
                new ObjectParameter("idPersonal", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var rolParameter = rol != null ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPPersonalModificar", idPersonalParameter, nombreParameter, apellidoParameter, direccionParameter, telefonoParameter, correoParameter, rolParameter);
        }
    
        public virtual int SPUsuarioAgregar(string nombre, string apellido, string direccion, string telefono, string correo, string contrasennia, Nullable<int> idRol)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var contrasenniaParameter = contrasennia != null ?
                new ObjectParameter("contrasennia", contrasennia) :
                new ObjectParameter("contrasennia", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("idRol", idRol) :
                new ObjectParameter("idRol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPUsuarioAgregar", nombreParameter, apellidoParameter, direccionParameter, telefonoParameter, correoParameter, contrasenniaParameter, idRolParameter);
        }
    
        public virtual ObjectResult<SPUsuarioConsultarPorID_Result> SPUsuarioConsultarPorID(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPUsuarioConsultarPorID_Result>("SPUsuarioConsultarPorID", idUsuarioParameter);
        }
    
        public virtual int SPUsuarioEliminar(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPUsuarioEliminar", idUsuarioParameter);
        }
    
        public virtual ObjectResult<SPUsuarioListar_Result> SPUsuarioListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPUsuarioListar_Result>("SPUsuarioListar");
        }
    
        public virtual int SPUsuarioModificar(Nullable<int> idUsuario, string nombre, string apellido, string direccion, string telefono, string correo, string contrasennia, Nullable<int> idRol)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var contrasenniaParameter = contrasennia != null ?
                new ObjectParameter("contrasennia", contrasennia) :
                new ObjectParameter("contrasennia", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("idRol", idRol) :
                new ObjectParameter("idRol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPUsuarioModificar", idUsuarioParameter, nombreParameter, apellidoParameter, direccionParameter, telefonoParameter, correoParameter, contrasenniaParameter, idRolParameter);
        }
    
        public virtual int SPUsuarioRolAgregar(string descripcion)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPUsuarioRolAgregar", descripcionParameter);
        }
    
        public virtual int SPUsuarioRolEliminar(Nullable<int> idUsuarioRol)
        {
            var idUsuarioRolParameter = idUsuarioRol.HasValue ?
                new ObjectParameter("idUsuarioRol", idUsuarioRol) :
                new ObjectParameter("idUsuarioRol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPUsuarioRolEliminar", idUsuarioRolParameter);
        }
    
        public virtual ObjectResult<SPUsuarioRolListar_Result> SPUsuarioRolListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPUsuarioRolListar_Result>("SPUsuarioRolListar");
        }
    
        public virtual int SPDetalleVentaAgregar(Nullable<int> idVenta, Nullable<int> idProducto, Nullable<int> cantidad, Nullable<double> precio, Nullable<double> impuesto)
        {
            var idVentaParameter = idVenta.HasValue ?
                new ObjectParameter("idVenta", idVenta) :
                new ObjectParameter("idVenta", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(double));
    
            var impuestoParameter = impuesto.HasValue ?
                new ObjectParameter("impuesto", impuesto) :
                new ObjectParameter("impuesto", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPDetalleVentaAgregar", idVentaParameter, idProductoParameter, cantidadParameter, precioParameter, impuestoParameter);
        }
    
        public virtual ObjectResult<SPDetalleVentaListar_Result> SPDetalleVentaListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPDetalleVentaListar_Result>("SPDetalleVentaListar");
        }
    
        public virtual int SPVentaAgregar(Nullable<int> idUsuario, Nullable<int> idCliente, Nullable<int> idPersonal, Nullable<System.DateTime> fecha, string tipoComprobante)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var idPersonalParameter = idPersonal.HasValue ?
                new ObjectParameter("idPersonal", idPersonal) :
                new ObjectParameter("idPersonal", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("tipoComprobante", tipoComprobante) :
                new ObjectParameter("tipoComprobante", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPVentaAgregar", idUsuarioParameter, idClienteParameter, idPersonalParameter, fechaParameter, tipoComprobanteParameter);
        }
    
        public virtual ObjectResult<SPVentaListar_Result> SPVentaListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPVentaListar_Result>("SPVentaListar");
        }
    
        public virtual int SPVentaEliminar(Nullable<int> idVenta)
        {
            var idVentaParameter = idVenta.HasValue ?
                new ObjectParameter("idVenta", idVenta) :
                new ObjectParameter("idVenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPVentaEliminar", idVentaParameter);
        }
    
        public virtual ObjectResult<SPVentasListar_Result> SPVentasListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPVentasListar_Result>("SPVentasListar");
        }
    }
}
